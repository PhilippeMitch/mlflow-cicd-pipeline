name: MLflow CI/CD

permissions:
  contents: read

on:
  workflow_dispatch:
    inputs:
      model_name:
        description: MLflow model name
        default: adult-classifier
        required: true
      version:
        description: Model version
        default: 1.0.0
        required: true
      stage:
        description: Model stage
        required: true

jobs:
  test:
    runs-on: ubuntu-latest
    environment:
      name: development
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        env:
          MLFLOW_TRACKING_URI: http://localhost:5000
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        run: |
          echo "Running tests for model: ${{ github.event.inputs.model_name }} version: ${{ github.event.inputs.version }}"
          if [ -z "$SLACK_WEBHOOK_URL" ]; then
            echo "‚ùå SLACK_WEBHOOK_URL is not set"
          else
            echo "‚úÖ SLACK_WEBHOOK_URL is set"
          fi
          if [ -z "$SLACK_BOT_TOKEN" ]; then
            echo "‚ùå SLACK_BOT_TOKEN is not set"
          else
            echo "‚úÖ SLACK_BOT_TOKEN is set"
          fi
          if [ -z "$MLFLOW_TRACKING_URI" ]; then
            echo "‚ùå MLFLOW_TRACKING_URI is not set"
          else
            echo "‚úÖ MLFLOW_TRACKING_URI is set"
          fi
          echo "Running tests..."
          pytest tests/test_model.py --mock-mlflow

      - name: Notify Slack (Test Failure)
        if: failure()
        uses: slackapi/slack-github-action@v2.0.0
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          slack-message: |
            {
              "text": "üö® *Test stage failed* for `${{ github.event.inputs.model_name }}` v${{ github.event.inputs.version }} in GitHub Actions job `${{ github.job }}` run #${{ github.run_number }}."
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Notify Slack (Test Success)
        if: success()
        uses: slackapi/slack-github-action@v2.0.0
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          slack-message: |
            {
              "text": "‚úÖ *Test stage succeeded* for `${{ github.event.inputs.model_name }}` v${{ github.event.inputs.version }} in GitHub Actions job `${{ github.job }}` run #${{ github.run_number }}."
            }

  deploy-dev:
    needs: test
    runs-on: ubuntu-latest
    environment:
      name: development
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push to Docker Hub (Dev)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/serve/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.inputs.model_name }}:dev-${{ github.event.inputs.version }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.inputs.model_name }}:dev-latest
          build-args: |
            MODEL_NAME=${{ github.event.inputs.model_name }}
            MODEL_VERSION=${{ github.event.inputs.version }}

      - name: Notify Slack (Dev Success)
        if: success()
        uses: slackapi/slack-github-action@v1.23.0
        with:
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel-id: mlflow-cicd
          text: 'Docker image pushed to Dev successfully: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.inputs.model_name }}:dev-${{ github.event.inputs.version }}'

      - name: Notify Slack (Dev Failure)
        if: failure()
        uses: slackapi/slack-github-action@v1.23.0
        with:
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel-id: mlflow-cicd
          text: 'Dev image push failed for ${{ github.event.inputs.model_name }} v${{ github.event.inputs.version }} in GitHub Actions: ${{ github.job }} #${{ github.run_number }}'

  deploy-uat:
    needs: deploy-dev
    if: github.event.inputs.stage == 'Production'
    runs-on: ubuntu-latest
    environment: uat
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push to Docker Hub (UAT)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/serve/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.inputs.model_name }}:uat-${{ github.event.inputs.version }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.inputs.model_name }}:uat-latest
          build-args: |
            MODEL_NAME=${{ github.event.inputs.model_name }}
            MODEL_VERSION=${{ github.event.inputs.version }}

      - name: Notify Slack (UAT Success)
        if: success()
        uses: slackapi/slack-github-action@v1.23.0
        with:
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel-id: mlflow-cicd
          text: 'Docker image pushed to UAT successfully: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.inputs.model_name }}:uat-${{ github.event.inputs.version }}'

      - name: Notify Slack (UAT Failure)
        if: failure()
        uses: slackapi/slack-github-action@v1.23.0
        with:
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel-id: mlflow-cicd
          text: 'UAT image push failed for ${{ github.event.inputs.model_name }} v${{ github.event.inputs.version }} in GitHub Actions: ${{ github.job }} #${{ github.run_number }}'

  deploy-prod:
    needs: deploy-uat
    if: github.event.inputs.stage == 'Production'
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push to Docker Hub (Prod)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/serve/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.inputs.model_name }}:prod-${{ github.event.inputs.version }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.inputs.model_name }}:prod-latest
          build-args: |
            MODEL_NAME=${{ github.event.inputs.model_name }}
            MODEL_VERSION=${{ github.event.inputs.version }}

      - name: Notify Slack (Prod Success)
        if: success()
        uses: slackapi/slack-github-action@v1.23.0
        with:
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel-id: mlflow-cicd
          text: 'Docker image pushed to Prod successfully: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.inputs.model_name }}:prod-${{ github.event.inputs.version }}'

      - name: Notify Slack (Prod Failure)
        if: failure()
        uses: slackapi/slack-github-action@v1.23.0
        with:
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel-id: mlflow-cicd
          text: 'Prod image push failed for ${{ github.event.inputs.model_name }} v${{ github.event.inputs.version }} in GitHub Actions: ${{ github.job }} #${{ github.run_number }}'