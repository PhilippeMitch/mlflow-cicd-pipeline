services:
  postgres:
    image: postgres:13.11
    environment:
      POSTGRES_USER: ${MLFLOW_DB_USER:-mlflow}
      POSTGRES_PASSWORD: ${MLFLOW_DB_PASSWORD:-mlflow}
      POSTGRES_DB: ${MLFLOW_DB_NAME:-mlflow}

    volumes:
      - D:/ci-cd-volumes/docker-data/postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - mlflow-network

  mlflow:
    build:
      context: .
      dockerfile: docker/mlflow/Dockerfile
    environment:
      MLFLOW_DB_USER: ${MLFLOW_DB_USER}
      MLFLOW_DB_PASSWORD: ${MLFLOW_DB_PASSWORD}
      MLFLOW_DB_NAME: ${MLFLOW_DB_NAME}
      MLFLOW_TRACKING_URI: ${MLFLOW_TRACKING_URI}
    command: >
      mlflow server
      --backend-store-uri postgresql://${MLFLOW_DB_USER}:${MLFLOW_DB_PASSWORD}@postgres:5432/${MLFLOW_DB_NAME}
      --default-artifact-root /mlflow/artifacts
      --host 0.0.0.0
    volumes:
      - D:/ci-cd-volumes/docker-data/mlflow:/mlflow/artifacts
    ports:
      - 5000:5000
    depends_on:
      - postgres
    networks:
      - mlflow-network
    healthcheck:
      test: [CMD, curl, -f, http://localhost:5000]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s  # Give MLflow time to start and connect to the database

  jenkins:
    image: jenkins/jenkins:2.426.3-lts-jdk17
    ports:
      - 8080:8080
      - 50000:50000
    volumes:
      - jenkins_home:/var/jenkins_home
    environment:
      - JENKINS_OPTS=--prefix=/jenkins


  redis:
    image: redis:7.0
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - 6379:6379
    volumes:
      - D:/ci-cd-volumes/docker-data/redis:/data
    networks:
      - mlflow-network
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}

  nginx:
      image: nginx
      ports:
        - 80:80
        - 443:443
      volumes:
        - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
        - ./nginx/certs:/etc/nginx/certs:ro
        - /dev/null:/etc/nginx/conf.d/default.conf:ro
      depends_on:
        mlflow:
          condition: service_healthy
      networks:
        - mlflow-network


  # mlflow-serving:
  #   image: myusername/adult-classifier:dev-1.0.0
  #   ports:
  #     - 8000:8000
  #   environment:
  #     - MLFLOW_TRACKING_URI=http://mlflow:5000
  #   depends_on:
  #     - mlflow
  #   healthcheck:
  #     test: [CMD, curl, -f, http://localhost:8000]
  #     interval: 30s

networks:
  mlflow-network:
    driver: bridge

volumes:
  jenkins_home: